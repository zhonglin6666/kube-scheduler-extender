---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-nginx
data:
  default.conf: |-
    upstream prometheus {
        server 127.0.0.1:9090;
    }
    upstream grafana {
        server 127.0.0.1:80;
    }
    upstream dashboard {
        server 1.2.3.4:32766;
    }
    server {
        listen       80;
        server_name  localhost;


        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        location /check {
            default_type text/plain;
            return 200 "serving is ok!";
        }

        location /status {
            stub_status on;
            access_log off;
        }

        location  /prometheus {
            proxy_pass http://prometheus;
            proxy_set_header   Host $host;
        }

        location /grafana {
            proxy_pass http://grafana;
            rewrite  ^/grafana/(.*)  /$1 break;
            proxy_set_header   Host $host;
        }

        location /dashboard {
            auth_basic            "Password please";
            auth_basic_user_file  /etc/nginx/conf.d/nginx_passwd;
            proxy_pass  http://dashboard;
            rewrite  ^/dashboard/(.*)  /$1 break;
            proxy_set_header   Host $host;
        }
        # redirect server error pages to the static page /50x.html
        # chengang from k8s config map file
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }
  nginx_passwd: |-
    admin:xxxxxxxxxxxxxxxxxxxxxxxxx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: proxy-nginx
  template:
    metadata:
      labels:
        k8s-app: proxy-nginx
    spec:
      schedulerName: my-scheduler
      containers:
        - name: nginx
          image: nginx:1.13
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-conf
          persistentVolumeClaim:
            claimName: storage-pvc
